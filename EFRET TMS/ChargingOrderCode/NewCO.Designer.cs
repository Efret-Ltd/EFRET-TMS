//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using DevExpress.Xpo;
using DevExpress.Xpo.Metadata;
using DevExpress.Data.Filtering;
using System.Collections.Generic;
using System.ComponentModel;
using System.Reflection;
namespace EFRET_TMS.axs
{

    [Persistent(@"NewCO_xpoView")]
    public partial class NewCo : XPLiteObject
    {
        int fCO;
        [Key(true)]
        [Persistent(@"XpoIdentityColumn")]
        public int CO
        {
            get { return fCO; }
            set { SetPropertyValue<int>("CO", ref fCO, value); }
        }
        string fNewCO1;
        [Indexed(Name = @"NewCO$NewCO", Unique = true)]
        [Size(50)]
        [Persistent(@"NewCO")]
        public string NewCO1
        {
            get { return fNewCO1; }
            set { SetPropertyValue<string>("NewCO1", ref fNewCO1, value); }
        }
        DateTime fDateCreation;
        [ColumnDbDefaultValue("(getdate())")]
        public DateTime DateCreation
        {
            get { return fDateCreation; }
            set { SetPropertyValue<DateTime>("DateCreation", ref fDateCreation, value); }
        }
        DateTime fDateUpdate;
        public DateTime DateUpdate
        {
            get { return fDateUpdate; }
            set { SetPropertyValue<DateTime>("DateUpdate", ref fDateUpdate, value); }
        }
        string fContractHolder;
        [Size(6)]
        [Persistent(@"IdContractHolder")]
        public string ContractHolder
        {
            get { return fContractHolder; }
            set { SetPropertyValue<string>("ContractHolder", ref fContractHolder, value); }
        }
        string fContractHolderReference;
        [Size(50)]
        public string ContractHolderReference
        {
            get { return fContractHolderReference; }
            set { SetPropertyValue<string>("ContractHolderReference", ref fContractHolderReference, value); }
        }
        bool fCMR;
        [ColumnDbDefaultValue("((0))")]
        public bool CMR
        {
            get { return fCMR; }
            set { SetPropertyValue<bool>("CMR", ref fCMR, value); }
        }
        float fSalesPrice;
        public float SalesPrice
        {
            get { return fSalesPrice; }
            set { SetPropertyValue<float>("SalesPrice", ref fSalesPrice, value); }
        }
        float fConversionRate;
        public float ConversionRate
        {
            get { return fConversionRate; }
            set { SetPropertyValue<float>("ConversionRate", ref fConversionRate, value); }
        }
        string fSalesPriceCurrency;
        [Size(1)]
        public string SalesPriceCurrency
        {
            get { return fSalesPriceCurrency; }
            set { SetPropertyValue<string>("SalesPriceCurrency", ref fSalesPriceCurrency, value); }
        }
        float fSalesPriceInCurrency;
        [ColumnDbDefaultValue("((0))")]
        public float SalesPriceInCurrency
        {
            get { return fSalesPriceInCurrency; }
            set { SetPropertyValue<float>("SalesPriceInCurrency", ref fSalesPriceInCurrency, value); }
        }
        string fSalesPriceVATCode;
        [Size(3)]
        public string SalesPriceVATCode
        {
            get { return fSalesPriceVATCode; }
            set { SetPropertyValue<string>("SalesPriceVATCode", ref fSalesPriceVATCode, value); }
        }
        float fSalesPriceVATRate;
        [ColumnDbDefaultValue("((0))")]
        public float SalesPriceVATRate
        {
            get { return fSalesPriceVATRate; }
            set { SetPropertyValue<float>("SalesPriceVATRate", ref fSalesPriceVATRate, value); }
        }
        float fSalesPriceVATAmount;
        [ColumnDbDefaultValue("((0))")]
        public float SalesPriceVATAmount
        {
            get { return fSalesPriceVATAmount; }
            set { SetPropertyValue<float>("SalesPriceVATAmount", ref fSalesPriceVATAmount, value); }
        }
        string fContractHolderPaymentTerm;
        [Size(50)]
        public string ContractHolderPaymentTerm
        {
            get { return fContractHolderPaymentTerm; }
            set { SetPropertyValue<string>("ContractHolderPaymentTerm", ref fContractHolderPaymentTerm, value); }
        }
        bool fContractHolderPaymentTermOEM;
        [ColumnDbDefaultValue("((0))")]
        public bool ContractHolderPaymentTermOEM
        {
            get { return fContractHolderPaymentTermOEM; }
            set { SetPropertyValue<bool>("ContractHolderPaymentTermOEM", ref fContractHolderPaymentTermOEM, value); }
        }
        string fComment;
        [Size(255)]
        public string Comment
        {
            get { return fComment; }
            set { SetPropertyValue<string>("Comment", ref fComment, value); }
        }
        float fInvoiceInGBP;
        [ColumnDbDefaultValue("((0))")]
        public float InvoiceInGBP
        {
            get { return fInvoiceInGBP; }
            set { SetPropertyValue<float>("InvoiceInGBP", ref fInvoiceInGBP, value); }
        }
        string fAllRisksInsurance;
        [Size(3)]
        public string AllRisksInsurance
        {
            get { return fAllRisksInsurance; }
            set { SetPropertyValue<string>("AllRisksInsurance", ref fAllRisksInsurance, value); }
        }
        string fContractHolderEmail;
        [Size(50)]
        public string ContractHolderEmail
        {
            get { return fContractHolderEmail; }
            set { SetPropertyValue<string>("ContractHolderEmail", ref fContractHolderEmail, value); }
        }
        string fContractHolderTel;
        [Size(25)]
        public string ContractHolderTel
        {
            get { return fContractHolderTel; }
            set { SetPropertyValue<string>("ContractHolderTel", ref fContractHolderTel, value); }
        }
        string fContractHolderMob;
        [Size(25)]
        public string ContractHolderMob
        {
            get { return fContractHolderMob; }
            set { SetPropertyValue<string>("ContractHolderMob", ref fContractHolderMob, value); }
        }
        string fTrailerNumber;
        [Size(30)]
        public string TrailerNumber
        {
            get { return fTrailerNumber; }
            set { SetPropertyValue<string>("TrailerNumber", ref fTrailerNumber, value); }
        }
        string fTrailerTypeAutorised;
        [Size(50)]
        public string TrailerTypeAutorised
        {
            get { return fTrailerTypeAutorised; }
            set { SetPropertyValue<string>("TrailerTypeAutorised", ref fTrailerTypeAutorised, value); }
        }
        bool fInterModal;
        [ColumnDbDefaultValue("((0))")]
        public bool InterModal
        {
            get { return fInterModal; }
            set { SetPropertyValue<bool>("InterModal", ref fInterModal, value); }
        }
        bool fInvoiced;
        [ColumnDbDefaultValue("((0))")]
        public bool Invoiced
        {
            get { return fInvoiced; }
            set { SetPropertyValue<bool>("Invoiced", ref fInvoiced, value); }
        }
        string fUserCreation;
        [Size(50)]
        public string UserCreation
        {
            get { return fUserCreation; }
            set { SetPropertyValue<string>("UserCreation", ref fUserCreation, value); }
        }
        string fUserUpdate;
        [Size(50)]
        public string UserUpdate
        {
            get { return fUserUpdate; }
            set { SetPropertyValue<string>("UserUpdate", ref fUserUpdate, value); }
        }
        string fUserOwner;
        [Size(50)]
        public string UserOwner
        {
            get { return fUserOwner; }
            set { SetPropertyValue<string>("UserOwner", ref fUserOwner, value); }
        }
        bool fActif;
        [ColumnDbDefaultValue("((0))")]
        public bool Actif
        {
            get { return fActif; }
            set { SetPropertyValue<bool>("Actif", ref fActif, value); }
        }
        bool fXroute;
        [ColumnDbDefaultValue("((0))")]
        public bool Xroute
        {
            get { return fXroute; }
            set { SetPropertyValue<bool>("Xroute", ref fXroute, value); }
        }
        string fTripType2;
        [Size(10)]
        public string TripType2
        {
            get { return fTripType2; }
            set { SetPropertyValue<string>("TripType2", ref fTripType2, value); }
        }
        float fBaseFreightRate;
        public float BaseFreightRate
        {
            get { return fBaseFreightRate; }
            set { SetPropertyValue<float>("BaseFreightRate", ref fBaseFreightRate, value); }
        }
        float fFuelSurcharge;
        public float FuelSurcharge
        {
            get { return fFuelSurcharge; }
            set { SetPropertyValue<float>("FuelSurcharge", ref fFuelSurcharge, value); }
        }
        string fStopOver1;
        [Size(20)]
        public string StopOver1
        {
            get { return fStopOver1; }
            set { SetPropertyValue<string>("StopOver1", ref fStopOver1, value); }
        }
        string fStopOver2;
        [Size(20)]
        public string StopOver2
        {
            get { return fStopOver2; }
            set { SetPropertyValue<string>("StopOver2", ref fStopOver2, value); }
        }
        float fFuelSurchargeRate;
        public float FuelSurchargeRate
        {
            get { return fFuelSurchargeRate; }
            set { SetPropertyValue<float>("FuelSurchargeRate", ref fFuelSurchargeRate, value); }
        }
        float fAdhocRate;
        public float AdhocRate
        {
            get { return fAdhocRate; }
            set { SetPropertyValue<float>("AdhocRate", ref fAdhocRate, value); }
        }
        float fdemurrage;
        public float demurrage
        {
            get { return fdemurrage; }
            set { SetPropertyValue<float>("demurrage", ref fdemurrage, value); }
        }
        string fDemurageCode;
        [Size(20)]
        public string DemurageCode
        {
            get { return fDemurageCode; }
            set { SetPropertyValue<string>("DemurageCode", ref fDemurageCode, value); }
        }
        int fInvoiceNumber;
        [ColumnDbDefaultValue("((0))")]
        public int InvoiceNumber
        {
            get { return fInvoiceNumber; }
            set { SetPropertyValue<int>("InvoiceNumber", ref fInvoiceNumber, value); }
        }
        DateTime fInvoiceDate;
        public DateTime InvoiceDate
        {
            get { return fInvoiceDate; }
            set { SetPropertyValue<DateTime>("InvoiceDate", ref fInvoiceDate, value); }
        }
        string fInvoicePath;
        [Size(50)]
        public string InvoicePath
        {
            get { return fInvoicePath; }
            set { SetPropertyValue<string>("InvoicePath", ref fInvoicePath, value); }
        }
        string fLine;
        [Size(255)]
        public string Line
        {
            get { return fLine; }
            set { SetPropertyValue<string>("Line", ref fLine, value); }
        }
        string fInvoiceEDI;
        [Size(50)]
        public string InvoiceEDI
        {
            get { return fInvoiceEDI; }
            set { SetPropertyValue<string>("InvoiceEDI", ref fInvoiceEDI, value); }
        }
        string fShipperAccount;
        [Size(255)]
        public string ShipperAccount
        {
            get { return fShipperAccount; }
            set { SetPropertyValue<string>("ShipperAccount", ref fShipperAccount, value); }
        }
        float fReroutingSurcharge;
        [ColumnDbDefaultValue("((0))")]
        public float ReroutingSurcharge
        {
            get { return fReroutingSurcharge; }
            set { SetPropertyValue<float>("ReroutingSurcharge", ref fReroutingSurcharge, value); }
        }
        float fWharehousing;
        [ColumnDbDefaultValue("((0))")]
        public float Wharehousing
        {
            get { return fWharehousing; }
            set { SetPropertyValue<float>("Wharehousing", ref fWharehousing, value); }
        }
        float fRedelivery;
        [ColumnDbDefaultValue("((0))")]
        public float Redelivery
        {
            get { return fRedelivery; }
            set { SetPropertyValue<float>("Redelivery", ref fRedelivery, value); }
        }
        float fCancellation;
        [ColumnDbDefaultValue("((0))")]
        public float Cancellation
        {
            get { return fCancellation; }
            set { SetPropertyValue<float>("Cancellation", ref fCancellation, value); }
        }
        string fBillingAccount;
        [Size(30)]
        public string BillingAccount
        {
            get { return fBillingAccount; }
            set { SetPropertyValue<string>("BillingAccount", ref fBillingAccount, value); }
        }
        float fAdHocSurcharge;
        [ColumnDbDefaultValue("((0))")]
        public float AdHocSurcharge
        {
            get { return fAdHocSurcharge; }
            set { SetPropertyValue<float>("AdHocSurcharge", ref fAdHocSurcharge, value); }
        }
        float fDriverDententionAtUnloading;
        [ColumnDbDefaultValue("((0))")]
        public float DriverDententionAtUnloading
        {
            get { return fDriverDententionAtUnloading; }
            set { SetPropertyValue<float>("DriverDententionAtUnloading", ref fDriverDententionAtUnloading, value); }
        }
        short feShipCo;
        [ColumnDbDefaultValue("((0))")]
        public short eShipCo
        {
            get { return feShipCo; }
            set { SetPropertyValue<short>("eShipCo", ref feShipCo, value); }
        }
        string fCorridor;
        [Size(50)]
        public string Corridor
        {
            get { return fCorridor; }
            set { SetPropertyValue<string>("Corridor", ref fCorridor, value); }
        }
        bool fCoS;
        [ColumnDbDefaultValue("((0))")]
        public bool CoS
        {
            get { return fCoS; }
            set { SetPropertyValue<bool>("CoS", ref fCoS, value); }
        }
        decimal fCustomClearance;
        [ColumnDbDefaultValue("((0))")]
        public decimal CustomClearance
        {
            get { return fCustomClearance; }
            set { SetPropertyValue<decimal>("CustomClearance", ref fCustomClearance, value); }
        }
        bool fP44ToUpload;
        [ColumnDbDefaultValue("((0))")]
        public bool P44ToUpload
        {
            get { return fP44ToUpload; }
            set { SetPropertyValue<bool>("P44ToUpload", ref fP44ToUpload, value); }
        }
        bool fP44Uploaded;
        [ColumnDbDefaultValue("((0))")]
        public bool P44Uploaded
        {
            get { return fP44Uploaded; }
            set { SetPropertyValue<bool>("P44Uploaded", ref fP44Uploaded, value); }
        }
        double fP44ShipmentID;
        public double P44ShipmentID
        {
            get { return fP44ShipmentID; }
            set { SetPropertyValue<double>("P44ShipmentID", ref fP44ShipmentID, value); }
        }
        DateTime fP44LastUpdate;
        public DateTime P44LastUpdate
        {
            get { return fP44LastUpdate; }
            set { SetPropertyValue<DateTime>("P44LastUpdate", ref fP44LastUpdate, value); }
        }
        string fP44StatusCode;
        [Size(255)]
        public string P44StatusCode
        {
            get { return fP44StatusCode; }
            set { SetPropertyValue<string>("P44StatusCode", ref fP44StatusCode, value); }
        }
        string fP44ReasonCode;
        [Size(255)]
        public string P44ReasonCode
        {
            get { return fP44ReasonCode; }
            set { SetPropertyValue<string>("P44ReasonCode", ref fP44ReasonCode, value); }
        }
        string fP44ReasonDescription;
        [Size(255)]
        public string P44ReasonDescription
        {
            get { return fP44ReasonDescription; }
            set { SetPropertyValue<string>("P44ReasonDescription", ref fP44ReasonDescription, value); }
        }
        bool fP44TrackTrailer;
        [ColumnDbDefaultValue("((0))")]
        public bool P44TrackTrailer
        {
            get { return fP44TrackTrailer; }
            set { SetPropertyValue<bool>("P44TrackTrailer", ref fP44TrackTrailer, value); }
        }
        bool fP44TrackingStarted;
        [ColumnDbDefaultValue("((0))")]
        public bool P44TrackingStarted
        {
            get { return fP44TrackingStarted; }
            set { SetPropertyValue<bool>("P44TrackingStarted", ref fP44TrackingStarted, value); }
        }
        bool fP44TrackingCompleted;
        [ColumnDbDefaultValue("((0))")]
        public bool P44TrackingCompleted
        {
            get { return fP44TrackingCompleted; }
            set { SetPropertyValue<bool>("P44TrackingCompleted", ref fP44TrackingCompleted, value); }
        }
        bool fP44TrackingError;
        [ColumnDbDefaultValue("((0))")]
        public bool P44TrackingError
        {
            get { return fP44TrackingError; }
            set { SetPropertyValue<bool>("P44TrackingError", ref fP44TrackingError, value); }
        }
        bool fP44UploadError;
        [ColumnDbDefaultValue("((0))")]
        public bool P44UploadError
        {
            get { return fP44UploadError; }
            set { SetPropertyValue<bool>("P44UploadError", ref fP44UploadError, value); }
        }
        float fP44Latitude;
        [ColumnDbDefaultValue("((0))")]
        public float P44Latitude
        {
            get { return fP44Latitude; }
            set { SetPropertyValue<float>("P44Latitude", ref fP44Latitude, value); }
        }
        float fP44Longitude;
        [ColumnDbDefaultValue("((0))")]
        public float P44Longitude
        {
            get { return fP44Longitude; }
            set { SetPropertyValue<float>("P44Longitude", ref fP44Longitude, value); }
        }
        int fP44CurrentStop;
        [ColumnDbDefaultValue("((0))")]
        public int P44CurrentStop
        {
            get { return fP44CurrentStop; }
            set { SetPropertyValue<int>("P44CurrentStop", ref fP44CurrentStop, value); }
        }
        [Association(@"MovementReferencesNewCO")]
        public XPCollection<Movement> Movements { get { return GetCollection<Movement>("Movements"); } }
    }

}
